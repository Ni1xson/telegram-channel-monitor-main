# -*- coding: utf-8 -*-
from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
)
from database.models import UserSettings


class AdminKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω-–±–æ—Ç–∞"""

    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏")],
                [KeyboardButton(text="üì¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏")],
                [KeyboardButton(text="üéØ –¶–µ–ª–µ–≤—ã–µ —á–∞—Ç—ã")],
                [
                    KeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
                    KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
                ],
                [KeyboardButton(text="üë§ User –∫–ª–∏–µ–Ω—Ç")],
                [KeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–æ–π")],
                [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
            ],
            resize_keyboard=True,
            one_time_keyboard=False,
        )
        return kb

    @staticmethod
    def cancel(callback_data: str = "cancel") -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã/–≤—ã—Ö–æ–¥–∞"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data=callback_data)]
            ]
        )

    @staticmethod
    def back_main() -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_main")]
            ]
        )

    @staticmethod
    def filters_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞–º–∏"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data="filter_add"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üìã –°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤", callback_data="filter_list"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="filter_refresh"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üóë –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", callback_data="filter_clear_all"
                    )
                ],
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_main")],
            ]
        )
        return kb

    @staticmethod
    def channels_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞–º–∏"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="channel_add"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üìã –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤", callback_data="channel_list"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="channel_refresh"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üóë –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ", callback_data="channel_clear_all"
                    )
                ],
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_main")],
            ]
        )
        return kb

    @staticmethod
    def user_client_menu(authorized: bool) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∫–ª–∏–µ–Ω—Ç–æ–º"""
        rows = []

        if authorized:
            rows.append(
                [InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏", callback_data="user_logout")]
            )
        else:
            rows.append(
                [InlineKeyboardButton(text="üîë –í–æ–π—Ç–∏", callback_data="user_login")]
            )

        rows.extend(
            [
                [
                    InlineKeyboardButton(
                        text="üìÇ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Å—Å–∏–∏", callback_data="user_sessions"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå –£–¥–∞–ª–∏—Ç—å —Å–µ—Å—Å–∏—é", callback_data="user_delete_session"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üíª –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏",
                        callback_data="user_cli_login",
                    )
                ],
            ]
        )

        rows.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_main")])

        return InlineKeyboardMarkup(inline_keyboard=rows)

    @staticmethod
    def target_chats_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–ª–µ–≤—ã–º–∏ —á–∞—Ç–∞–º–∏"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç", callback_data="target_add"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤", callback_data="target_list"
                    )
                ],
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_main")],
            ]
        )
        return kb

    @staticmethod
    def settings_menu(settings: "UserSettings | None" = None) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ c –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π"""

        def mark(text: str, flag: bool) -> str:
            return f"‚úÖ {text}" if flag else f"‚ùå {text}"

        if settings:
            fmt_map = {
                "full": "–ü–æ–ª–Ω—ã–π",
                "compact": "–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π",
                "minimal": "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π",
            }
            fmt = fmt_map.get(
                settings.notification_format,
                settings.notification_format,
            )
            format_text = f"üìù –§–æ—Ä–º–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {fmt}"
            time_text = mark("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è", settings.include_timestamp)
            channel_text = mark("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–Ω–∞–ª", settings.include_channel_info)
            link_text = mark("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏", settings.include_message_link)
            sender_text = mark("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∞", settings.include_sender_id)
            monitoring_text = mark("–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", settings.monitoring_enabled)

            if settings.forward_as_code:
                formatting_text = "üí¨ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ö–æ–¥"
            elif settings.include_original_formatting:
                formatting_text = "üí¨ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –û—Ä–∏–≥–∏–Ω–∞–ª"
            else:
                formatting_text = "üí¨ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –¢–µ–∫—Å—Ç"
        else:
            format_text = "üìù –§–æ—Ä–º–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
            time_text = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è"
            channel_text = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞–Ω–∞–ª"
            link_text = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏"
            sender_text = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∞"
            formatting_text = "üí¨ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
            monitoring_text = "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"

        rows = [
            [
                InlineKeyboardButton(
                    text=format_text, callback_data="settings_format"
                )
            ],
            [InlineKeyboardButton(text=time_text, callback_data="settings_time")],
            [
                InlineKeyboardButton(
                    text=channel_text, callback_data="settings_channel"
                )
            ],
            [InlineKeyboardButton(text=link_text, callback_data="settings_link")],
            [InlineKeyboardButton(text=sender_text, callback_data="settings_sender")],
            [
                InlineKeyboardButton(
                    text=formatting_text, callback_data="settings_formatting"
                )
            ],
            [
                InlineKeyboardButton(
                    text=monitoring_text, callback_data="settings_monitoring"
                )
            ],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_main")],
        ]

        return InlineKeyboardMarkup(inline_keyboard=rows)

    @staticmethod
    def filter_logic_types() -> InlineKeyboardMarkup:
        """–¢–∏–ø—ã –ª–æ–≥–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–°–æ–¥–µ—Ä–∂–∏—Ç", callback_data="logic_contains")],
                [
                    InlineKeyboardButton(
                        text="–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ", callback_data="logic_exact"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="–í—Å–µ —Å–ª–æ–≤–∞", callback_data="logic_all_words"
                    )
                ],
                [InlineKeyboardButton(text="–§—Ä–∞–∑–∞", callback_data="logic_phrase")],
                [
                    InlineKeyboardButton(
                        text="–†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ", callback_data="logic_regex"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="–ù–µ —Å–æ–¥–µ—Ä–∂–∏—Ç", callback_data="logic_not_contains"
                    )
                ],
                [InlineKeyboardButton(text="üîô –û—Ç–º–µ–Ω–∞", callback_data="filter_cancel")],
            ]
        )
        return kb

    @staticmethod
    def boolean_choice(
        true_text: str = "–î–∞",
        false_text: str = "–ù–µ—Ç",
        true_callback: str = "choice_true",
        false_callback: str = "choice_false",
    ) -> InlineKeyboardMarkup:
        """–í—ã–±–æ—Ä –¥–∞/–Ω–µ—Ç"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text=true_text, callback_data=true_callback),
                    InlineKeyboardButton(text=false_text, callback_data=false_callback),
                ]
            ]
        )
        return kb

    @staticmethod
    def filter_actions(filter_id: int) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è —Å —Ñ–∏–ª—å—Ç—Ä–æ–º"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                        callback_data=f"filter_edit_{filter_id}",
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üîÑ –í–∫–ª/–í—ã–∫–ª",
                        callback_data=f"filter_toggle_{filter_id}",
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå –£–¥–∞–ª–∏—Ç—å",
                        callback_data=f"filter_delete_{filter_id}",
                    )
                ],
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="filter_list")],
            ]
        )
        return kb

    @staticmethod
    def channel_actions(channel_id: int) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è —Å –∫–∞–Ω–∞–ª–æ–º"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="üîÑ –í–∫–ª/–í—ã–∫–ª", callback_data=f"channel_toggle_{channel_id}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"channel_delete_{channel_id}"
                    )
                ],
                [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="channel_list")],
            ]
        )
        return kb

    @staticmethod
    def confirmation(action: str, item_id: int) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è"""
        kb = InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úÖ –î–∞", callback_data=f"confirm_{action}_{item_id}"
                    ),
                    InlineKeyboardButton(
                        text="‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}"
                    ),
                ]
            ]
        )
        return kb

    @staticmethod
    def confirm_chat(user_id: int, chat_id: int) -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —á–∞—Ç",
                        callback_data=f"target_confirm_{user_id}_{chat_id}",
                    )
                ]
            ]
        )
